const http = require("http");
const getRequest = require("./methods/get.js");
const postRequest = require("./methods/post.js");
const deleteRequest = require("./methods/delete.js");
//1)Server oluÅŸtur
const server = http.createServer((req, res) => {
    //frontende gÃ¶nderilecek bÃ¼tÃ¼n cevaplara eklenecek ve cors hatasÄ±nÄ± engelleyecek header
    res.setHeader("Access-Control-Allow-Origin", "*");
    console.log(res, "ðŸ˜€")
    //istek atÄ±lan method tÃ¼rÃ¼ne gÃ¶re client 'a cevap vericek fonksiyonu belirledik.module yapÄ±sÄ± sayesinde kod kalabalÄ±ÄŸÄ± Ä±lmamasÄ± iÃ§in ayrÄ± dosyalara tanÄ±mladÄ±k
    switch (req.method) {
        // frontend'den bir post/put/patch/delete isteÄŸi atÄ±lÄ±ÄŸÄ± zaman tarayÄ±cÄ± Ã¶ncelikle server'Ä±n bu istek tiplerini kabul ettiÄŸini kontrol etmek amacÄ±yla options methoduyla istek atÄ±yor. EÄŸer options isteÄŸi gelince cevap gÃ¶ndermezssek diÄŸer isteÄŸi hiÃ§ atmÄ±yor ama option gelince doÄŸru header'lar ile cevap verirsek options'Ä±n ardÄ±ndan asÄ±l isteÄŸi gÃ¶nderiyor


        case "OPTIONS":
            res.setHeader(
                "Access-Control-Allow-Methods",
                "GET, POST, DELETE, PUT, PATCH, OPTIONS"
            );
            res.setHeader("Access-Control-Allow-Headers", "Content-Type");

            res.end();
            break;

        case "GET":
            getRequest(req, res);
            break;

        case "POST":
            postRequest(req, res);
            break;

        case "DELETE":
            deleteRequest(req, res);
            break;

        default:
            // cevab'Ä±n durum kodunu belirle
            res.statusCode = 404;

            // gÃ¶nderlicek cevaba iÃ§eirÄŸin tipini headers olarak ekle
            res.setHeader("Content-Type", "application/json");

            // cevab'Ä±n iÃ§eirÄŸini belirleme
            res.write(
                JSON.stringify({
                    message: "Ä°stek yapÄ±lan adres tanÄ±msÄ±z.",
                })
            );

            // client'a cevabÄ± gÃ¶nders
            res.end();
    }
});

//2) Belirli porta gelen istekleri dinle
const port = 5005;
server.listen(port, () => {
    console.log(`Server ${port}'a gelen istekleri dinlemeye basladi`);
});